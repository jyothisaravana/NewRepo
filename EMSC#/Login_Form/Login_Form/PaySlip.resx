<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        d9X/DwpyalsvCLClAAAAAElFTkSuQmCC
</value>
  </data>
</root>